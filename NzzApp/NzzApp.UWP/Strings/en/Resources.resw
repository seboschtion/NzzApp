<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutPivotItem.Header" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="AppVersionTitleTextBlock.Text" xml:space="preserve">
    <value>App version</value>
  </data>
  <data name="CopyrightTitleTextBlock.Text" xml:space="preserve">
    <value>Copyright</value>
  </data>
  <data name="DeveloperTitleTextBlock.Text" xml:space="preserve">
    <value>Developers</value>
  </data>
  <data name="FeedbackButton.Content" xml:space="preserve">
    <value>Go to GitHub</value>
  </data>
  <data name="FeedbackInfoTextBlock.Text" xml:space="preserve">
    <value>This app is an open source product. Feel free to collaborate! Create issues or even better: pull requests!</value>
  </data>
  <data name="FeedbackPivotItem.Header" xml:space="preserve">
    <value>feedback</value>
  </data>
  <data name="FontFamilyToggleSwitch.Header" xml:space="preserve">
    <value>Typeface</value>
  </data>
  <data name="FontFamilyToggleSwitch.OffContent" xml:space="preserve">
    <value>sans-serif</value>
  </data>
  <data name="FontFamilyToggleSwitch.OnContent" xml:space="preserve">
    <value>serif</value>
  </data>
  <data name="FontSizeSlider.Header" xml:space="preserve">
    <value>Font size in the article view</value>
  </data>
  <data name="GotoSettingsButton.Label" xml:space="preserve">
    <value>settings</value>
  </data>
  <data name="HomeButton.Label" xml:space="preserve">
    <value>startpage</value>
  </data>
  <data name="IapDonationDialogNotAvailableButtonClose.Content" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="IapDonationDialogNotAvailableText.Text" xml:space="preserve">
    <value>Thank you for your interest! It seems like this product is not available at this moment. You can try it again later, if you want to.</value>
  </data>
  <data name="IapDonationDialogNotAvailableTitle.Text" xml:space="preserve">
    <value>This product is not available</value>
  </data>
  <data name="LiveTileToggleSwitch.Header" xml:space="preserve">
    <value>Show breaking news in live tile</value>
  </data>
  <data name="LiveTileToggleSwitch.OffContent" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="LiveTileToggleSwitch.OnContent" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="LiveTileToggleSwitchInfo.Text" xml:space="preserve">
    <value>Be aware that this app must be allowed by the battery saver to run background tasks.</value>
  </data>
  <data name="MainSettingsPivot.Title" xml:space="preserve">
    <value>NZZ.ch</value>
  </data>
  <data name="MediaElementStateBuffering" xml:space="preserve">
    <value>buffering video...</value>
  </data>
  <data name="MediaElementStateClosed" xml:space="preserve">
    <value>video not available</value>
  </data>
  <data name="MediaElementStateOpening" xml:space="preserve">
    <value>opening video...</value>
  </data>
  <data name="MediaElementStatePaused" xml:space="preserve">
    <value />
  </data>
  <data name="MediaElementStatePlaying" xml:space="preserve">
    <value />
  </data>
  <data name="MediaElementStateStopped" xml:space="preserve">
    <value />
  </data>
  <data name="NoArticlesTextBlock.Text" xml:space="preserve">
    <value>No articles were downloaded for this department. Check your internet connection and try again. Ok?</value>
  </data>
  <data name="NoDataTextBlock.Text" xml:space="preserve">
    <value>The article could not be downloaded. Would you like to try again?</value>
  </data>
  <data name="NoDataTryAgainButton.Content" xml:space="preserve">
    <value>yes, try again</value>
  </data>
  <data name="NoInternetAlertText" xml:space="preserve">
    <value>Meanwhile you can read articles which were already downloaded.</value>
  </data>
  <data name="NoInternetAlertTitle" xml:space="preserve">
    <value>No internet connection</value>
  </data>
  <data name="NzzContactButton.Content" xml:space="preserve">
    <value>NZZ contact</value>
  </data>
  <data name="NzzCopyrightButton.Content" xml:space="preserve">
    <value>copyright</value>
  </data>
  <data name="NzzImpressumButton.Content" xml:space="preserve">
    <value>impressum</value>
  </data>
  <data name="OpenInBrowserButton.Label" xml:space="preserve">
    <value>open in browser</value>
  </data>
  <data name="PersonalCopyrightTextBlock.Text" xml:space="preserve">
    <value>This app is not the official app by the NZZ. Copyrights belong to the NZZ group.</value>
  </data>
  <data name="RateButton.Content" xml:space="preserve">
    <value>rate app</value>
  </data>
  <data name="RelatedArticles.Text" xml:space="preserve">
    <value>Related articles</value>
  </data>
  <data name="RelatedContent.Text" xml:space="preserve">
    <value>Related content</value>
  </data>
  <data name="RelatedContentNotImplemented.Text" xml:space="preserve">
    <value>To view this type of content, open this article in your browser.</value>
  </data>
  <data name="ReloadButton.Label" xml:space="preserve">
    <value>reload</value>
  </data>
  <data name="SettingsPivotItem.Header" xml:space="preserve">
    <value>settings</value>
  </data>
  <data name="TryInBrowserButton.Content" xml:space="preserve">
    <value>try open in browser</value>
  </data>
  <data name="TwitterButton.Content" xml:space="preserve">
    <value>Follow on Twitter</value>
  </data>
  <data name="UnsuccessfullInitializationTextBlock.Text" xml:space="preserve">
    <value>Hello! Unfortunately there was an error while downloading the initial data for the app. You need to have a working internet connection. This is necessary for the first app start. Would you like to try again?</value>
  </data>
  <data name="WaitingPageAlmostDone" xml:space="preserve">
    <value>almost done</value>
  </data>
  <data name="WaitingPageLoading" xml:space="preserve">
    <value>loading ...</value>
  </data>
  <data name="WaitingPageNoInternet" xml:space="preserve">
    <value>connection failed</value>
  </data>
  <data name="WaitingPageSuccess" xml:space="preserve">
    <value>end</value>
  </data>
</root>